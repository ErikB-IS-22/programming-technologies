Цель лабораторной работы: установить на рабочую машину локальную модель нейросети Qwen и запустить её. Перед началом работы необходимо было установить Python, WebUI для интеракций с языковой моделью и непосредственно саму модель Qwen. Для выполнения задания была использована версия Python 3.12.10, установлен text-generation-webui по ссылке https://github.com/oobabooga/text-generation-webui и модель Qwen Qwen2.5-Omni-3B-GGUF. После копирования text-generation-webui модель была добавлена в WebUI.
Чтобы запустить WebUI, была выполнена команда python server.py и был выполнен переход по ссылке (рис. 1). После запуска был открыт интерфейс WebUI (рис. 2). Далее во вкладке Model была выбрана и загружена модель Qwen.

Рисунок 1 – Запуск WebUI

Рисунок 2 – Интерфейс WebUI
После загрузки модели, модель была протестирована с помощью простых промптов (рис. 3), также модель была протестирована с другими режимами диалога (chat, chat-instruct, instruct).

Рисунок 3 – Тестирование модели
Далее по требованию задания был настроен системный промпт. Был выбран системный промпт Alpaca. Для этого во вкладке Parameters >> Instruction templates, а затем Model >> Custom Instruction Template был выбран соответствующий промпт (рис. 4). После этого модель с новым системным промптом также была протестирована (рис. 5).

Рисунок 4 – Настройка системного промпта.

Рисунок 5 – Тестирование системного промпта Alpaca
Вторым задание было тестирование другой модели. В качестве другой модели была выбрана Qwen2.5-Omni-3B-Q8_0, которая также была протестирована (рис. 6).

Рисунок 6 – Тестирование модели Qwen2.5-Omni-3B-Q8_0
Третьим заданием были настройки различных параметров (temperature, top_p, top_k, repetition_penalty, и т.д.). Эти настройки отвечают за случайность результатов:
•	temperature: основной фактор, контролирующий случайность выходных данных. 0 = детерминированный (используется только наиболее вероятный токен). Чем выше значение, тем выше случайность.
•	top_p: если не установлено значение 1, выбираются токены с суммой вероятностей меньше этого числа. Чем больше значение, тем шире диапазон возможных случайных результатов.
•	top_k: аналогично top_p, но выбирает только наиболее вероятные токены top_k. Чем больше значение, тем шире диапазон возможных случайных результатов.
•	repetition_penalty: Штрафной коэффициент за повторение предыдущих токенов. 1 означает отсутствие штрафа, большее значение = меньше повторений, меньшее значение = больше повторений.
Если выставить максимальные значения этих параметров (рис. 7), модель начнёт неадекватно себя вести (рис. 8).

Рисунок 7 – Изменение параметров модели

Рисунок 8 – Неадекватное поведение модели при выставлении максимальных значений параметров
